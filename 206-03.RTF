{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar \f4\fs20 \snext0 Normal;}{\s1\keepn\nowidctlpar \f4\ul \sbasedon0\snext0 heading 1;}{\s2\qc\keepn\nowidctlpar \b\f4\fs20 \sbasedon0\snext0 heading 2;}{\s3\qc\keepn\nowidctlpar \b\f4 \sbasedon0\snext0 
heading 3;}{\s4\qc\keepn\nowidctlpar \b\i\f4\fs28\ul \sbasedon0\snext0 heading 4;}{\s5\qj\li360\keepn\nowidctlpar \b\f4 \sbasedon0\snext0 heading 5;}{\s6\qj\li360\keepn\nowidctlpar \f4 \sbasedon0\snext0 heading 6;}{\s7\qj\keepn\nowidctlpar \f4 
\sbasedon0\snext0 heading 7;}{\s8\keepn\nowidctlpar \b\f4\fs20 \sbasedon0\snext0 heading 8;}{\s9\keepn\nowidctlpar \f4 \sbasedon0\snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 
\sbasedon0\snext15 header;}{\s16\nowidctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext16 footer;}{\*\cs17 \additive\sbasedon10 page number;}{\s18\nowidctlpar \f4 \sbasedon0\snext18 Body Text;}{\s19\nowidctlpar \b\f4 \sbasedon0\snext19 Body Text 2;}{
\s20\qc\nowidctlpar \f4\fs20 \sbasedon0\snext20 Body Text 3;}{\s21\nowidctlpar \f11\fs20 \sbasedon0\snext21 Plain Text;}{\s22\qj\li360\nowidctlpar \f4 \sbasedon0\snext22 Body Text 21;}{\s23\li360\nowidctlpar \f4 \sbasedon0\snext23 Body Text Indent 2;}}
{\info{\title Question 1)}{\author Chua Chee Wee}{\operator Administrator}{\creatim\yr1999\mo2\dy26\hr18\min23}{\revtim\yr1999\mo2\dy26\hr18\min24}{\printim\yr1999\mo2\dy8\hr18\min40}{\version1}{\edmins6}{\nofpages6}{\nofwords0}{\nofchars0}{\vern49197}}
\margl1440\margr1151\margt1151\margb862 \widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere {\header \pard\plain \s15\nowidctlpar\tx1440\tx1800\tqc\tx4320\tx7200\tx7560\tqr\tx8640 \f4\fs20 {\fs22 
Student Name\tab \tab : Chua Chee Wee\tab \tab CIS 206 Coursework 03
\par }\pard \s15\nowidctlpar\tx1800\tqc\tx4320\tqr\tx8640 {\lang1024 {\*\do\dobxcolumn\dobypara\dodhgt8193\dpline\dpptx0\dppty0\dpptx9648\dppty0\dpx0\dpy323\dpxsize9648\dpysize0\dplinesolid\dplinecor0\dplinecog0\dplinecob0\dplinew15}
{\*\do\dobxcolumn\dobypara\dodhgt8192\dpline\dpptx0\dppty0\dpptx0\dppty0\dpx144\dpy323\dpxsize0\dpysize0\dplinesolid\dplinecor0\dplinecog0\dplinecob0\dplinew15}}{\fs22 Student Number\tab : U / 96 / 0237638
\par }\pard \s15\nowidctlpar\tqc\tx4320\tqr\tx8640 {\fs22 
\par }
\par }{\footer \pard\plain \s16\nowidctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 {\lang1024 {\*\do\dobxcolumn\dobypara\dodhgt8194\dpline\dpptx0\dppty0\dpptx9648\dppty0\dpx0\dpy183\dpxsize9648\dpysize0\dplinesolid\dplinecor0\dplinecog0\dplinecob0\dplinew15}}{\fs22 

\par University Of London\tab \tab 
\par }{\i\fs22 BSc Computing & Information Systems\tab \tab }{\field{\*\fldinst {\cs17  PAGE  \\* MERGEFORMAT }}{\fldrslt {\cs17 6}}}{\cs17 /}{\field{\*\fldinst {\cs17  NUMPAGES  \\* MERGEFORMAT }}{\fldrslt {\cs17 6}}}{\i\fs22 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qj\fi-1440\li1440\nowidctlpar \f4\fs20 {\b\fs24 Question 1)}{\fs24 \tab 
Which of the following match? For those that do not match, give the substitutions required:
\par }\pard \s15\qj\nowidctlpar {\fs24 
\par {\pntext\pard\plain1.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 gf(X,Y)\tab gf(a(b,c),Z)
\par {\pntext\tab}}\pard \s15\qj\nowidctlpar{\*\pn \pnlvlcont\pndec }{\fs24 
\par {\pntext\tab}}\pard \s15\qj\nowidctlpar\tx1440{\*\pn \pnlvlcont\pndec }{\fs24 Answer: \tab 
\par {\pntext\tab}X = variable, correspond to a(b, c) where a is a fact with atoms b and c
\par {\pntext\tab}Y = variable, correspond to Z where Z is also a variable
\par {\pntext\tab}Hence, the above pair matches.
\par {\pntext\tab}
\par {\pntext\pard\plain2.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 [[A]|B]\tab [C,D]
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par Answer:
\par [[A]|B] is a list with two variables and can be rewritten as [A,B]
\par A is a variable which corresponds to C as C is also a variable
\par B is also a variable which corresponds to D as D is also a variable
\par Hence, the above pair matches.
\par 
\par 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\b\fs24 Question 2) \tab }{\fs24 Using predicate such as }{\i\fs24 animal }{\fs24 and }{\i\fs24 legs}{\fs24 , produce the Prolog rules and facts to state the following:
\par }{\b\fs24 
\par {\pntext\pard\plain1.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 Humans have two legs.
\par {\pntext\pard\plain2.\tab}Cats have four legs.
\par {\pntext\pard\plain3.\tab}Humans are animals.
\par {\pntext\pard\plain4.\tab}Any animal with two legs is a human.
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par Answer:
\par 
\par legs(human,2).
\par legs(cats,4).
\par animal(human).
\par is_human(X):- legs(X,2), animal(X).
\par 
\par \page }{\b\fs24 Question 3)}{\fs24 \tab Assume that the following facts and rules have been given:
\par 
\par {\pntext\pard\plain1.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 likes(jo,f40).
\par {\pntext\pard\plain2.\tab}can_afford(jo,uno).
\par {\pntext\pard\plain3.\tab}can_afford(jo,f40).
\par {\pntext\pard\plain4.\tab}can_buy(X,Y):- can_afford(X,Y).
\par {\pntext\pard\plain5.\tab}will_buy(X,Y):- can_buy(X,Y), likes(X,Y).
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par Determine the output of the following queries:
\par 
\par {\pntext\pard\plain1.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 can_buy(jo,X).
\par {\pntext\tab}}\pard \s15\qj\nowidctlpar\tx1440{\*\pn \pnlvlcont\pndec }{\fs24 
\par {\pntext\tab}}{\b\fs24 Answer:\tab 
\par {\pntext\tab}}{\fs24 
\par {\pntext\tab}}{\i\fs24 Goal  }{\fs24 = can_buy(jo,X)
\par {\pntext\tab}}\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440{\*\pn \pnlvlcont\pndec }{\fs24 
\par {\pntext\tab}}\pard \s15\qj\nowidctlpar\tx0\tx1260{\*\pn \pnlvlcont\pndec }{\fs24 Goal matches with rule 4. Hence, new goal is can_afford(X,Y).
\par {\pntext\tab}can_afford(X,Y) matches with rule 2\rquote s can_afford(jo, uno). 
\par {\pntext\tab}Hence, can_buy(jo,X) will return with }{\b\fs24 X instantiated with uno.}{\fs24  
\par {\pntext\tab}Backtrack to can_afford(X,Y) which matches with rule 3\rquote s can_afford(jo, f40), therefore can_buy(jo,X) will return with }{\b\fs24 X instantiated with f40.
\par {\pntext\tab}
\par {\pntext\tab}}{\fs24 X=uno
\par {\pntext\tab}X=f40
\par {\pntext\tab}
\par {\pntext\pard\plain2.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 will_buy(jo,X).
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\b\fs24 Answer
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par }\pard \s15\qj\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 
will_buy(jo,X) matches with rule 5. New goal is can_buy(jo,X). This matches with rule 4. New goal is can_afford(jo,X). This matches with rule 2, can_afford(jo,uno). Continue with rule 5, likes(jo,uno). There are no matches. Backtrack to can_afford(jo, X).
 This matches with rule 3, can_afford(jo, f40). Continue with rule 5, likes(X, Y), matches with rule 1. }{\b\fs24 Hence, X=f40}{\fs24 .
\par 
\par X=f40
\par 
\par }\pard \s15\qj\nowidctlpar\tx1440 {\b\fs24 Question 4)}{\fs24 \tab The following defines a simple examination system:
\par 
\par {\pntext\pard\plain1.\tab}}\pard \s15\qj\fi-360\li360\nowidctlpar\tx360\tx1440{\*\pn \pnlvlbody\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}{\fs24 passed(X,Y):-mark(X,Y,Z), Z>50.
\par {\pntext\pard\plain2.\tab}pass_year(X,[]).
\par {\pntext\pard\plain3.\tab}pass_year(X,.(H,T)):-passed(X,H),pass_year(X,T).
\par {\pntext\pard\plain4.\tab}mark(jo,c11,62).
\par {\pntext\pard\plain5.\tab}mark(jo,c12,43).
\par }\pard \s15\qj\nowidctlpar\tx1440 {\fs24 
\par Determine the output of the following query, explaining your answer and including in your explanation the step-by-step evaluation:
\par 
\par pass_year(jo,[c11,c12]).
\par 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 Answer\tab 
\par }\pard \s15\nowidctlpar\tx0\tqc\tx4320\tqr\tx8640 {\fs24 No.
\par 
\par }\pard \s15\nowidctlpar\tx3686 {\fs24 Step by step evaluation
\par pass_year(jo,[c11,c12]) \tab match with rule 3 
\par passed("jo","c11") \tab match with rule 1
\par mark("jo","c11",_)\tab \tab match with rule 5
\par mark("jo","c11",62) ,   62>50\tab \tab Z is instantiated as 62
\par pass_year("jo",["c12"])\tab continue with the rule in rule 3.
\par pass_year("jo",["c12"])\tab match with rule 1.
\par passed("jo","c12")\tab matched with  rule 1.
\par mark("jo","c12",_)\tab try match with rule 4. Fail.
\par mark("jo","c12",_)\tab try match with rule 5. Z is instantianed as 43.
\par mark("jo","c12",43), 43>50\tab continue with rule 1\rquote s condition, Z>50... Fail.
\par passed("jo","c12")\tab Fail.\page }{\b\fs24 Question 5)}{\fs24 \tab Define a predicate }{\i\fs24 int}{\fs24  that takes three list as arguments and returns Yes if and only if the first two lists have the
 same length and the third list is the same as the first two list interleaved. For example, }{\i\fs24 int([1,2],[4,5],[1,4,2,5])}{\fs24  should return Yes.
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par Answer:\tab 
\par 
\par int([],[],[]).
\par int([X1|Y1],[X2|Y2],[X1,X2|Y3]):-int(Y1,Y2,Y3).
\par 
\par The terminating fact is when all list is empty.
\par }\pard \s15\qj\nowidctlpar\tx0 {\fs24 
The rule defines that the first atom of the first two list should correspond to the first two atom of the third list respectively. As the first two list is of the same length and the third is an addition of the first two list, by removing one atom fro
m each of the first two list and two atom from the third list, the lists should terminated together to satisfy the fact. The rule recurse itself by calling the rule with the remaining of the lists.
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par 
\par }{\b\fs24 Question 6)}{\fs24 \tab Explain how the predicate }{\i\fs24 int}{\fs24 , defined above, could be used to define a predicate }{\i\fs24 even}{\fs24  that returns Yes if and only if its argument is a list with even length.
\par }{\b\fs24 
\par }{\fs24 \tab Define }{\i\fs24 even}{\fs24  in this manner and explain why the following does not correctly define a predicate }{\i\fs24 odd}{\fs24  that returns Yes if and only if its argument is a list of odd length:
\par 
\par \tab odd(X):-not even(X).
\par 
\par Answer:\tab 
\par 
\par even(A):-int(X,Y,A).
\par 
\par }\pard \s15\qj\nowidctlpar\tx709 {\fs24 The rule uses the predicate }{\i\fs24 int}{\fs24 
 to remove two atoms from the variable A at every recursion. The variable X and Y are dummy variables that serve no purpose than to satisfy the empty list requirement in the fact. The rule will satisfy if the variable becomes an empty list after an even n
umber of atoms are removed from the list and fails if and only one atom is left in the list after the subtractions.
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par }\pard \s15\qj\nowidctlpar\tx851 {\fs24 \tab odd(X):-not(even(X)).
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par }\pard \s15\qj\nowidctlpar {\fs24 The previous rule had the correct logic but was declared wrongly. The build-in predicate }{\i\fs24 not}{\fs24  should be use with the result obtained from }{\i\fs24 even(X)}{\fs24  as a variable.
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 \page }{\b\fs24 Question 7)}{\fs24 \tab 
Write a C function that takes a one-dimensional array of integers and the array length as input, sorts the array into ascending order, and returns the sorted array to the calling program via the parameter list.
\par 
\par Answer:
\par 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\b\fs24 void}{\fs24  sort(}{\b\fs24 int}{\fs24  *intarray, }{\b\fs24 int}{\fs24  size)
\par \{
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 \tab }{\b\fs24 int}{\fs24  temp,i,j;
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 \tab }{\b\fs24 for}{\fs24  (i=0;i<size-1;i++)
\par \tab    \tab }{\b\fs24 for}{\fs24  (j=0;j<size-1;j++)
\par \tab       \tab }{\b\fs24 if}{\fs24  (intarray[j]>intarray[j+1])
\par          \tab \tab \{
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24          \tab temp=intarray[j];
\par             \tab intarray[j]=intarray[j+1];
\par             \tab intarray[j+1]=temp;
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24          \tab \tab \}
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 \}
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par 
\par }{\b\fs24 Question 8)}{\fs24 \tab Write a C function that takes 10 integers from the terminal, puts them in the array, and return the array to the calling program via the parameter list.
\par 
\par Answer\tab :
\par 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\b\fs24 void}{\fs24  get_array(}{\b\fs24 int}{\fs24  *intarray)
\par \{
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 \tab }{\b\fs24 int}{\fs24  i,n;
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24    \tab }{\b\fs24 for}{\fs24  (i=0;i<10;i++)
\par \tab \{
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24    \tab printf("Enter the value for item %3d: ",i);
\par    \tab scanf("%d", &n);
\par   \tab intarray[i]=n;
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24    \tab \}
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 \}
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\b\fs24 
\par 
\par \page Question 9)}{\fs24 \tab Write a C program that takes inputs 10 integers from the terminal and outputs them in ascending order. You should use the functions defined in question 7) and 8).
\par 
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 Answer:
\par 
\par void main()
\par \{
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx720\tx1440\tqc\tx4320\tqr\tx8640 {\fs24 
\par    \tab }{\b\fs24 int}{\fs24  new_array[10];
\par   \tab }{\b\fs24 int}{\fs24  i;
\par 
\par }{\fs24\cf15 \tab /* takes in 10 integers and puts in them in an array */
\par }{\fs24    \tab get_array(new_array);
\par 
\par }{\fs24\cf15    \tab /* sorts the array obtained in question 8 */
\par    \tab /* array size should be dynamic as question did not specify size */
\par }{\fs24    \tab sort(new_array,10);
\par 
\par }{\fs24\cf15    \tab /* question 9 - display the sorted array */
\par }{\fs24    \tab for (i=0;i<10;i++)
\par    \tab \tab printf("%d\\n",new_array[i]);
\par }\pard \s15\qj\fi-1440\li1440\nowidctlpar\tx1440 {\fs24 
\par \}
\par }}